#  Kogut-Susskind fermions with improved actions
#  MIMD version 7
#
#  Generic make-include file for ks_imp_rhmc codes
#
#  This template file defines rules and macros common to all architectures
#  It is intended to be an include file for other Makefiles.
#  Don't use it by itself!
#
#	"make su3_rhmc" used the rational function hybrid MC algorithm
#		for the Symanzik 1 loop gauge action and Asqtad quark action
#
#       See examples below for naming and building targets for
#               other actions

MYINCLUDEDIR = .
INCLUDEDIR = ../include
#Where the complex and su3 libraries are
LIBDIR = ../libraries

GLOBAL_HEADERS = ${INCLUDEDIR} ../libraries/include

INLINE_HEADERS = \
  ../sse/include/ \
  ../sse2/include/ \
  ../libraries/include/

MY_HEADERS = \
  lattice.h \
  params.h \
  defines.h \
  graphene_includes.h

HEADERS = ${GLOBAL_HEADERS} ${MY_HEADERS} ${INLINE_HEADERS} ${SCIDAC_HEADERS}

MY_OBJECTS = \
  control.o \
  setup.o \
  update_u_u1.o \
  update_h_u1.o

# MY_OBJECTS = \
#   control.o \
#   gauge_info.o \
#   setup.o \
#   update_h.o \
#   update.o \
#   update_u.o

G_OBJECTS = \
  make_lattice.o \
  file_types_milc_usqcd.o \
  ranstuff.o \
  remap_stdio_from_args.o \
  show_generic_opts.o \
  path_product_u1.o \
  io_helpers_u1.o \
  io_lat_utils.o \
  io_ansi.o \
  gauge_stuff_u1.o \
  gauge_info.o \
  ranmom_u1.o \
  d_plaq4_u1.o \
  ploop2_u1.o \
  reunitarize2.o \
  check_unitarity.o 

# G_OBJECTS = \
#   check_unitarity_u1.o \
#   plaq_u1.o \
#   field_utilities.o \ REMOVED BECAUSE COMPILER COULD NOT FIND! 4/21/2010
#   gaugefix_u1.o \
#   gauge_stuff.o \
#   gauge_utilities_u1.o \
#   grsource_u1.o \
#   io_detect.o \
#   io_helpers.o \
#   make_lattice.o \
#   path_product_u1.o \
#   ploop2_u1.o \
#   ranmom_u1.o \
#   ranstuff.o \
#   remap_stdio_from_args.o \
#   reunitarize_u1.o \
#   show_generic_opts.o

ifeq ($(strip ${HAVEQIO}),true)
  G_OBJECTS += io_scidac.o io_scidac_types.o
endif

G_KS_OBJECTS = \
  ks_utilities.o \
  mat_invert_u1.o \
  rephase_u1.o \
  f_meas_u1.o \
  grsource_imp_u1.o 
	
# G_KS_OBJECTS = \
#   f_meas_u1.o \
#   ks_utilities.o \
#   mat_invert_u1.o \
#   path_transport_u1.o \
#   rephase_u1.o \
#   show_generic_ks_opts.o

ifeq ($(strip ${HAVEQIO}),true)
  G_KS_OBJECTS += io_scidac_ks.o
endif

# Objects depending on architecture and software package 

# Selection of layout

ifeq ($(strip ${HAVEQDP}),true)
  LAYOUT = layout_qdp.o # Required
else
  LAYOUT = layout_hyper_prime.o # Choices possible here
endif

# Selection of a non-QDP FN Dslash 
DSLASH_FN = dslash_fn_u1.o #need to bring over from generic_ks_u1 folder

# Selection of the fermion links algorithm for imp actions
ifeq ($(strip ${HAVEQOP}),true)
# Interface to access QOP
  FLINKS_FN = ${FLINKS_FNQOP}
else
  FLINKS_FN = fermion_links_fn_u1.o fermion_links_helpers_u1.o #need to modify and create these files
endif

# Selection of the gauge force algorithm
ifeq ($(strip ${HAVEQOP}),true)
# Interface to access QOP
#  SYMZK1FORCE = gauge_force_symzk1_qop.o
#  SYMZK1FORCE += ${SYMZK1FORCEQOP}
  SYMZK1FORCE = gauge_force_imp_u1.o #does not exist yet
else
  SYMZK1FORCE = gauge_force_imp_u1.o #does not exist yet
endif

  CONGRAD_FN = d_congrad5_fn_u1.o d_congrad_opt_u1.o #need to bring over from generic_ks_u1 folder

# Selection of the fermion force algorithm for imp actions
ifeq ($(strip ${HAVEQOP}),true)
# Interface to access QOP
  ASQFORCE = fermion_force_asqtad_qop.o fermion_force_asqtad_qop_F.o \
     fermion_force_asqtad_qop_D.o
# The implementation of the interface (if not packaged)
  ASQFORCE += ${ASQFORCEQOP}
else
  # For more general FN actions, try fermion_force_general.o +
  #	fermion_force_fn_multi.o + fermion_force_multi.o
  ASQFORCE = fermion_force_asqtad_u1.o 
endif

# Selection of the multimass inverter
ifeq ($(strip ${HAVEQOP}),true)
# Interface to access QOP
  INV_FN_OBJECTS = ${CONGRAD_FN} ${DSLASH_FN}
  MULTI_INV_FN = ks_multicg.o ks_multicg_offset_qop.o \
    ks_multicg_offset_qop_D.o  ks_multicg_offset_qop_F.o
else
  INV_FN_OBJECTS = ${CONGRAD_FN} ${DSLASH_FN}
  MULTI_INV_FN = ks_multicg.o ks_multicg_offset.o
endif

FN_OBJECTS   = ${FLINKS_FN} ${INV_FN_OBJECTS}

ADD_OBJECTS = ${COMMPKG}

# Generic QOP objects
ifeq ($(strip ${HAVEQOP}),true)
  ADD_OBJECTS += ${GENERICQOP}
endif

OBJECTS = ${MY_OBJECTS} ${G_OBJECTS} ${G_KS_OBJECTS} ${LAYOUT} \
  ${ADD_OBJECTS} ${EXTRA_OBJECTS} ${FN_OBJECTS}

#Libraries for complex numbers and su3 functions
P = $(strip ${PRECISION})
QCDLIB = ${LIBDIR}/su3.${P}.a ${LIBDIR}/complex.${P}.a 

LIBRARIES = ${QCDLIB} ${SCIDAC_LIBRARIES}

# Default rule for C compilation
.c.o: ; ${CC} -c ${CFLAGS}  $*.c 

# To force a full remake when changing targets
LASTMAKE = .lastmake.${MAKEFILE}.${P}.${MYTARGET}

${LASTMAKE}:
	-/bin/rm -f .lastmake.* quark_action.h gauge_action.h
	${MAKE} -f ${MAKEFILE} clean
	touch ${LASTMAKE}

ALL_MAKES = \
   Make_template \
   ${MAKEFILE} \
   ../Make_template_qop \
   ../Make_template_scidac \
   ../generic/Make_template \
   ../generic_ks/Make_template

# To force a remake when changing any make file, header, or target
${OBJECTS} : ${HEADERS} ${LASTMAKE} ${ALL_MAKES}
control.o: ${HEADERS} ${LASTMAKE} ${ALL_MAKES}
control_test_su3_mat_op.o: ${HEADERS} ${LASTMAKE} ${ALL_MAKES}

fermion_links_fn_u1.o: quark_action.h 
fermion_links_hisq.o: quark_action.h 
gauge_info.o:  quark_action.h
gauge_stuff_u1.o: gauge_action.h 
quark_stuff.o: quark_action.h 
quark_stuff_hisq.o: quark_action.h 
#setup.o: quark_action.h COMMENT OUT FOR NOW

# Directories where we store the improved action headers
QUARKIMP = ../generic_ks/imp_actions
GAUGEIMP = ../generic/imp_actions

quark_action.h: ${QUARKIMP}/${QUARK}
	/bin/cp ${QUARKIMP}/${QUARK} quark_action.h

gauge_action.h: ${GAUGEIMP}/${GAUGE}
	/bin/cp ${GAUGEIMP}/${GAUGE} gauge_action.h

ifeq ($(strip ${HAVEQMP}),true)
  DHAVE_QMP = -DHAVE_QMP
endif

ifeq ($(strip ${HAVEQIO}),true)
  DHAVE_QIO = -DHAVE_QIO
endif

ifeq ($(strip ${HAVEQDP}),true)
  DHAVE_QDP = -DHAVE_QDP
endif

ifeq ($(strip ${HAVEQOP}),true)
  DHAVE_QOP = -DHAVE_QOP
endif

DARCH = ${DHAVE_QMP} ${DHAVE_QIO} ${DHAVE_QDP} ${DHAVE_QOP}

########################################################
# Optional DEFINES for targets

##### Targets:

######################################################################
# Named Asqtad HMC

u1_hmc::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN -DONEMASS -DPHI_ALGORITHM -DHMC_ALGORITHM -DWANT_U1 -DFOUR_DIM -DNPBP_REPS -DNON_COMPACT" \
	"GAUGE = plaquette_action.h" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS = ${ASQFORCE} ${SYMZK1FORCE} quark_stuff.o update_onemass_u1.o d_action_u1.o"

graphene_hmc::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN -DONEMASS -DPHI_ALGORITHM -DHMC_ALGORITHM -DWANT_U1 -DNPBP_REPS -DNON_COMPACT -DDRUT_DEBUG" \
	"GAUGE = plaquette_action.h" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS = ${ASQFORCE} ${SYMZK1FORCE} quark_stuff.o update_onemass_u1.o d_action_u1.o"

graphene_mag_hmc::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN -DONEMASS -DPHI_ALGORITHM -DHMC_ALGORITHM -DWANT_U1 -DNPBP_REPS -DNON_COMPACT -DDRUT_DEBUG -DEXT_FIELD" \
	"GAUGE = plaquette_action.h" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS = ${ASQFORCE} ${SYMZK1FORCE} quark_stuff.o update_onemass_u1.o d_action_u1.o"

graphene_spectrum::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN -DONEMASS -DPHI_ALGORITHM -DHMC_ALGORITHM -DWANT_U1 -DNPBP_REPS -DNON_COMPACT -DDRUT_DEBUG -DSPECTRUM" \
	"GAUGE = plaquette_action.h" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS = ${ASQFORCE} ${SYMZK1FORCE} quark_stuff.o update_onemass_u1.o d_action_u1.o spectrum2_u1.o spectrum2_s.o"

clean:
	-/bin/rm -f *.o quark_action.h gauge_action.h

# Rules for generic routines
include ../generic/Make_template

# Rules for generic_ks routines
include ../generic_ks/Make_template

libmake:
	@echo Building libraries with ${MAKELIBRARIES}
	cd ${LIBDIR} ;\
	${MAKE} -f ${MAKELIBRARIES} "APP_CC=${CC}" "PRECISION=${PRECISION}" all

localmake: ${OBJECTS} ${LIBRARIES}
	${LD} -o ${MYTARGET} ${LDFLAGS} \
	${OBJECTS} ${QCDLIB} ${ILIB} -lm
	touch localmake

target: libmake localmake 

