#  Kogut-Susskind fermions with improved actions
#  MIMD version 6
#  "ks_imp3", started 1/22/99, streamline ks_imp2
#
#	UPDATED TO U(1) 07/2011
#  Generic make-include file for ks_imp3 codes
#  This template file defines rules and macros common to all architectures
#  It is intended to be an include file for other Makefiles.
#  Don't use it by itself!
#
#	"make u1_eigen_asqtad" is the only target
#

MYINCLUDEDIR = .
INCLUDEDIR = ../include
#Where the complex and su3 libraries are
LIBDIR = ../libraries

GLOBAL_HEADERS = ${INCLUDEDIR} ../libraries/include

INLINE_HEADERS = \
  ../sse/include/ \
  ../sse2/include/ \
  ../libraries/include/

MY_HEADERS = \
  lattice.h \
  params.h \
  defines.h \
  ks_eig_includes.h

HEADERS = ${GLOBAL_HEADERS} ${MY_HEADERS} ${INLINE_HEADERS} ${SCIDAC_HEADERS}

MY_OBJECTS = \
  control.o \
  setup.o

G_OBJECTS = \
  file_types_milc_usqcd.o \
  io_ansi.o \
  io_lat_utils.o \
  gauge_info.o \
  check_unitarity.o \
  d_plaq4_u1.o \
  io_helpers_u1.o \
  make_lattice.o \
  path_product_u1.o \
  ranmom_u1.o \
  ranstuff.o \
  remap_stdio_from_args.o \
  reunitarize2.o \

ifeq ($(strip ${QCDOC}),true)
  G_OBJECTS += ploop2.o
else
  G_OBJECTS += ploop3.o
endif

ifeq ($(strip ${HAVEQIO}),true)
  G_OBJECTS += io_scidac.o io_scidac_types.o
endif

G_KS_OBJECTS= \
  f_meas_u1.o \
  grsource_imp_u1.o \
  jacobi.o \
  mat_invert_u1.o \
  quark_stuff.o \
  rephase_u1.o

# Selection of eigensolver program
ifeq ($(strip ${HAVEQOP}),true)
# Interface to access QOP
  G_KS_OBJECTS += eigen_stuff_u1.o
else
  ifeq ($(strip ${HAVEQDP}),true)
    G_KS_OBJECTS += eigen_stuff_qdp.o
  else
    G_KS_OBJECTS += eigen_stuff_u1.o
  endif
endif

ifeq ($(strip ${HAVEQIO}),true)
  G_KS_OBJECTS += io_scidac_ks.o
endif

G_W_OBJECTS = \

ifeq ($(strip ${HAVEQIO}),true)
  G_W_OBJECTS += io_scidac_w.o
endif

# Selection of layout
ifeq ($(strip ${QCDOC}),true)
  ifeq ($(strip ${HAVEQDP}),true)
    LAYOUT = layout_qdp.o # Required
  else
    LAYOUT = layout_qcdoc.o # Required
  endif
else
  ifeq ($(strip ${HAVEQDP}),true)
    LAYOUT = layout_qdp.o # Required
  else
    LAYOUT = layout_hyper_prime.o # Choices possible here
  endif
endif

# Selection of a non-QDP FN Dslash 
# Choices are dslash_fn.o dslash_fn2.o dslash_fn_dblstore.o
DSLASH_FN = dslash_fn_u1.o

# Selection of the fermion links algorithm for imp actions
ifeq ($(strip ${HAVEQOP}),true)
# Interface to access QOP
  FLINKS_FN = ${FLINKS_FNQOP}
else
  FLINKS_FN = fermion_links_fn_u1.o fermion_links_helpers_u1.o
endif
INV_FN_OBJECTS = ${CONGRAD_FN} ${DSLASH_FN}
CONGRAD_FN = d_congrad5_fn_u1.o d_congrad_opt_u1.o

# The only choice for inverters and Dslash for EO actions

# For EO actions we don't precompute the fat links for Dslash at the moment
FN_OBJECTS   = ${FLINKS_FN} ${INV_FN_OBJECTS}

# EDRAM allocation for QCDOC
ifeq ($(strip ${QCDOC}),true)
  QCDOC_OBJECTS = qcdoc_alloc.o
endif

ADD_OBJECTS = ${COMMPKG} 

# Generic QOP objects
ifeq ($(strip ${HAVEQOP}),true)
  ADD_OBJECTS += ${GENERICQOP}
endif

OBJECTS = ${MY_OBJECTS} ${G_OBJECTS} ${G_KS_OBJECTS} \
  ${G_W_OBJECTS} ${LAYOUT} ${ADD_OBJECTS} ${EXTRA_OBJECTS}

#Libraries for complex numbers and su3 functions
P = $(strip ${PRECISION})
QCDLIB = ${LIBDIR}/su3.${P}.a ${LIBDIR}/complex.${P}.a 

LIBRARIES = ${QCDLIB} ${SCIDAC_LIBRARIES}

# Default rule for C compilation
.c.o: ; ${CC} -c ${CFLAGS}  $*.c 

# To force a full remake when changing targets
LASTMAKE = .lastmake.${MAKEFILE}.${P}.${MYTARGET}

${LASTMAKE}:
	-/bin/rm -f .lastmake.* quark_action.h
	${MAKE} -f ${MAKEFILE} clean
	touch ${LASTMAKE}

ALL_MAKES = \
   Make_template \
   ${MAKEFILE} \
   ../Make_template_qop \
   ../Make_template_scidac \
   ../generic/Make_template \
   ../generic_ks/Make_template \
   ../generic_wilson/Make_template

# To force a remake when changing any make file, header, or target
${OBJECTS} : ${HEADERS} ${LASTMAKE} ${ALL_MAKES}
control.o: ${HEADERS} ${LASTMAKE} ${ALL_MAKES}

fermion_links_fn_u1.o: quark_action.h 
fermion_links_hisq.o: quark_action.h 
gauge_info.o:  quark_action.h
setup.o: quark_action.h

# Directories where we store the improved action headers
QUARKIMP = ../generic_ks/imp_actions

quark_action.h: ${QUARKIMP}/${QUARK}
	/bin/cp ${QUARKIMP}/${QUARK} quark_action.h

fermion_links_fn_u1.o: quark_action.h 
quark_stuff.o: quark_action.h 


ifeq ($(strip ${QCDOC}),true)
  DQCDOC = -DQCDOC
endif

ifeq ($(strip ${HAVEQMP}),true)
  DHAVE_QMP = -DHAVE_QMP
endif

ifeq ($(strip ${HAVEQIO}),true)
  DHAVE_QIO = -DHAVE_QIO
endif

ifeq ($(strip ${HAVEQDP}),true)
  DHAVE_QDP = -DHAVE_QDP
endif

ifeq ($(strip ${HAVEQOP}),true)
  DHAVE_QOP = -DHAVE_QOP
endif

DARCH = ${DQCDOC} ${DHAVE_QMP} ${DHAVE_QIO} ${DHAVE_QDP} ${DHAVE_QOP}

########################################################
# Optional DEFINES for targets

# -DFN          identifies fat-Naik-like actions with only next and 3rd
#               next neighbor linkage
# -FOUR_DIM   flag for loops; gives ability for (3+1) U(1) Theory
##### Targets:

u1_eigen_asqtad::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN -DFOUR_DIM -DNON_COMPACT" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS= ${FN_OBJECTS}"

graphene_eigen_asqtad::
	${MAKE}	-f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN -DNON_COMPACT" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS= ${FN_OBJECTS}"
clean:
	-/bin/rm -f *.o

# Rules for generic routines
include ../generic/Make_template

# Rules for generic_ks routines
include ../generic_ks/Make_template

# Rules for generic_wilson routines
include ../generic_wilson/Make_template

libmake:
	@echo Building libraries with ${MAKELIBRARIES}
	cd ${LIBDIR} ;\
	${MAKE} -f ${MAKELIBRARIES} "APP_CC=${CC}" "PRECISION=${PRECISION}" all

localmake: ${OBJECTS} ${LIBRARIES}
	${LD} -o ${MYTARGET} ${LDFLAGS} \
	${OBJECTS} ${QCDLIB} ${ILIB} -lm
	touch localmake

target: libmake localmake 
